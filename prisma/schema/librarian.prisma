model Librarian {
  librarianId   String        @id @default(uuid())
  institutionId String?
  firstName     String
  lastName      String
  email         String
  status        LibrarianStatus @default(ACTIVE)
  gender        Gender
  phoneNumber   String
  password      String        @db.VarChar(2055)
  role          Role
  permissions   Permission[]
  joined        DateTime      @default(now())
  acquisition    Acquisition[]  @relation("librarian")
  manages       Institution[] @relation("InstitutionManager")
  institution   Institution?  @relation("InstitutionLibrarians", fields: [institutionId], references: [id], onDelete: Restrict)
  library       Library[]     @relation("librarian")
  librarian     Circulation[] @relation("circulation")
  reservation   Reservation[] @relation("FromReservation")

  @@map("librarians")
}

enum Role {
  DIRECTOR
  ASSISTANT
  CATALOGER
  REFERENCE_LIBRARIAN
  CIRCULATION_LIBRARIAN
  ARCHIVIST
  DIGITAL_LIBRARIAN
  SYSTEMS_LIBRARIAN
  ACQUISITIONS_LIBRARIAN
  YOUTH_LIBRARIAN
  LAW_LIBRARIAN
  MEDICAL_LIBRARIAN
  SCHOOL_LIBRARIAN
  PUBLIC_SERVICES_LIBRARIAN
  INTERLIBRARY_LOAN_LIBRARIAN
  ADMINISTRATOR
  RESEARCH_LIBRARIAN
  SERIALS_LIBRARIAN
  SPECIAL_COLLECTIONS_LIBRARIAN
  TECHNICAL_LIBRARIAN
  EVENTS_COORDINATOR
  VOLUNTEER_COORDINATOR
}

enum Permission {
  READ
  WRITE
  DELETE
  MANAGE_USERS
  SYSTEM_ADMIN
}

enum Gender {
  F
  M
  O
}

enum LibrarianStatus {
  ACTIVE
  INACTIVE
  SUSPENDED
  ON_LEAVE
  RETIRED
  TERMINATED
  PENDING
  PROBATION
  RESIGNED
  TRANSFERRED
  DECEASED
}
