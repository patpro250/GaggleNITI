model Member {
  id             String         @id @default(uuid())
  firstName      String
  lastName       String
  email          String         @unique
  profile        String?
  dateOfBirth    DateTime
  phone          String
  gender         Gender
  fine           Float?
  address        Json
  memberShipType MembershipType
  status         MemberStatus   @default(ACTIVE)
  createdAt      DateTime       @default(now()) @db.Timestamp(6)
  updatedAt      DateTime       @updatedAt @db.Timestamp(6)
  password       String
  favoriteBook   FavoriteBook[] @relation("memberInFavoriteBook")
  reservation    Reservation[]  @relation("Reservation")
  member         Circulation[]  @relation("incirculation")
  BookRequest    BookRequest[]  @relation("User")

  @@index([email])
  @@index([firstName, lastName])
  @@map("members")
}

enum MembershipType {
  STUDENT
  REGULAR
  SENIOR
  PREMIUM
  TEMPORARY
  LIFETIME
  FAMILY
  CORPORATE
  VIP
}

enum MemberStatus {
  ACTIVE
  INACTIVE
  PENDING
  SUSPENDED
  BANNED
  EXPIRED
  ON_HOLD
  DECEASED
  BLACKLISTED
  PROBATION
  GUEST
  FROZEN
}
